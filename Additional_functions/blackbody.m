function map = blackbody(N)
%Modified version of inferno, as below:
%--------------------------------------------------------------------------
% Colormap from MatPlotLib 2.0. Perceptually uniform and very attractive!
%
%%% Syntax:
%  map = inferno
%  map = inferno(N)
%
% Colormap designed by Nathaniel J. Smith and Stefan van der Walt.
%
% For MatPlotLib 2.0 improved colormaps were created in the perceptually
% uniform colorspace CAM02-UCS. The new colormaps are introduced here:
% <http://matplotlib.org/2.0.0rc2/users/dflt_style_changes.html>
% The RGB data is from here: <https://bids.github.io/colormap/>
% Note VIRIDIS replaces the awful JET as the MatPlotLib default colormap.
%
%% Examples %%
%
%%% Plot the scheme's RGB values:
% rgbplot(inferno(256))
%
%%% New colors for the COLORMAP example:
% load spine
% image(X)
% colormap(inferno)
%
%%% New colors for the SURF example:
% [X,Y,Z] = peaks(30);
% surfc(X,Y,Z)
% colormap(inferno)
% axis([-3,3,-3,3,-10,5])
%
%% Input and Output Arguments %%
%
%%% Inputs (*=default):
% N = NumericScalar, N>=0, an integer to define the colormap length.
%   = *[], use the length of the current figure's colormap (see COLORMAP).
%
%%% Outputs:
% map = NumericMatrix, size Nx3, a colormap of RGB values between 0 and 1.
%
% map = inferno(N)

if nargin<1 || isempty(N)
	N = size(get(gcf,'colormap'),1);
else
	assert(isscalar(N)&&isreal(N),'First argument must be a real numeric scalar.')
end
%
raw = [0	0	0;...
6	2	1;...
13	4	2;...
18	6	3;...
22	8	4;...
25	10	5;...
28	12	6;...
31	13	8;...
33	15	9;...
36	16	10;...
39	17	11;...
42	18	12;...
45	18	13;...
48	19	14;...
51	20	15;...
54	21	15;...
57	21	16;...
61	22	17;...
64	22	18;...
67	23	18;...
70	24	19;...
73	24	20;...
77	25	20;...
80	25	21;...
83	26	21;...
87	26	22;...
90	27	22;...
93	27	23;...
97	28	23;...
100	28	24;...
104	29	24;...
107	29	25;...
111	29	25;...
114	30	26;...
118	30	27;...
121	31	27;...
125	31	28;...
128	31	28;...
132	31	29;...
136	32	29;...
139	32	30;...
143	32	30;...
146	32	31;...
150	33	31;...
154	33	32;...
157	33	32;...
161	33	33;...
165	33	34;...
169	33	34;...
172	33	35;...
176	34	35;...
177	38	34;...
179	42	34;...
181	45	33;...
183	49	33;...
185	52	32;...
187	55	32;...
189	58	31;...
191	61	30;...
193	64	30;...
195	67	29;...
197	70	28;...
198	73	27;...
200	76	26;...
202	78	25;...
204	81	24;...
206	84	23;...
208	86	21;...
210	89	20;...
212	92	18;...
214	94	16;...
216	97	14;...
218	100	12;...
219	102	9;...
221	105	6;...
222	108	5;...
223	112	5;...
223	115	5;...
224	119	4;...
224	122	4;...
224	126	4;...
225	129	4;...
225	133	4;...
226	136	4;...
226	139	4;...
226	143	4;...
227	146	3;...
227	149	3;...
227	152	3;...
228	156	3;...
228	159	3;...
228	162	3;...
228	165	3;...
228	168	3;...
229	171	3;...
229	175	4;...
229	178	4;...
229	181	4;...
229	184	4;...
229	187	4;...
229	190	4;...
229	193	4;...
229	196	5;...
229	200	5;...
229	203	5;...
229	206	5;...
229	209	6;...
229	212	14;...
231	214	42;...
233	216	59;...
235	218	73;...
237	220	86;...
239	222	98;...
241	224	110;...
243	226	121;...
244	229	131;...
246	231	142;...
247	233	153;...
248	235	163;...
250	237	173;...
251	239	183;...
252	242	194;...
253	244	204;...
253	246	214;...
254	248	224;...
254	250	235;...
255	253	245;...
255	255	255]./255
%
num = size(raw,1);
% With small extrapolation when N>num:
vec = linspace(0,num+1,N+2);
%map = labinterp(1:num,raw,vec(2:end-1),'linear','extrap'); % Lab
map = interp1(1:num,raw,vec(2:end-1),'linear','extrap'); % RGB
map = max(0,min(1,map));
% Interpolation only for all values of N:
%map = labinterp(1:num,raw,linspace(1,num,N),'spline'); % Lab
%map = interp1(1:num,raw,linspace(1,num,N),'spline') % RGB
%
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%inferno
% Copyright (c) 2017 Stephen Cobeldick
%
% Licensed under the Apache License, Version 2.0 (the "License");
% you may not use this file except in compliance with the License.
% You may obtain a copy of the License at
%
% http://www.apache.org/licenses/LICENSE-2.0
%
% Unless required by applicable law or agreed to in writing, software
% distributed under the License is distributed on an "AS IS" BASIS,
% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
% See the License for the specific language governing permissions and limitations under the License.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%license