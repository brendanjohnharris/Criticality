function testTimeseries(system, outfolder, save_cp_split)
    % Generate time series for the main analysis; this should only take a few
    % minutes, and will produce an `inputs.mat` file, a `results` folder and 100
    % `time_series_data` subfolders (each with a `timeseries.mat` file and an `inputs_out.mat` file)
    if nargin < 3 || isempty(save_cp_split)
        save_cp_split = 100;
    end

    switch system
        case 'supercritical_hopf_radius_(strogatz)'
            inputs = make_input_struct(0, 'cp_range', -1:0.01:0, 'etarange', 0.01:0.01:1, ...
                'bifurcation_point', 0, 'initial_conditions', 0, ...
                'foldername', fullfile(outfolder, 'results'), 'numpoints', 1000000, ...
                'parameters', [], 'savelength', 5000, ...
                'system_type', 'supercritical_hopf_radius_(strogatz)', ...
                'tmax', 1000, 'T', 500, 'save_cp_split', save_cp_split, ...
                'randomise', 0, 'rngseed', 17062020, 'vocal', 1);

        case 'supercritical_hopf_radius_(measurement)'
            inputs = make_input_struct(0, 'cp_range', -1:0.01:0, 'etarange', 0.01:0.01:1, ...
                'bifurcation_point', 0, 'initial_conditions', 0, ...
                'foldername', fullfile(outfolder, 'results'), 'numpoints', 1000000, ...
                'parameters', [], 'savelength', 5000, ...
                'system_type', 'supercritical_hopf_radius_(strogatz)', ...
                'tmax', 1000, 'T', 500, 'save_cp_split', save_cp_split, ...
                'randomise', 0, 'rngseed', 17062020, 'vocal', 1);

        case 'saddle_node'
            inputs = make_input_struct(0, 'cp_range', -1.05:0.01:-0.05, 'etarange', 0.001:0.001:0.1, ...
                'bifurcation_point', 0, 'initial_conditions', 0, ...
                'foldername', fullfile(outfolder, 'results'), 'numpoints', 1000000, ...
                'parameters', [], 'savelength', 5000, ...
                'system_type', 'saddle_node', ...
                'tmax', 1000, 'T', 500, 'save_cp_split', save_cp_split, ...
                'randomise', 0, 'rngseed', 29062020, 'vocal', 1, 'criteria', "max(rout, [], 2)' < 3.*sqrt(-cp_range)", 'maxAttempts', 1000);

        case 'lowHighNoise'
            inputs = make_input_struct(0, 'cp_range', -1:0.001:0, 'etarange', [0.0001, 1], ...
                'bifurcation_point', 0, 'initial_conditions', 0, ...
                'foldername', fullfile(outfolder, 'results'), 'numpoints', 1000000, ...
                'parameters', [], 'savelength', 5000, ...
                'system_type', 'supercritical_hopf_radius_(strogatz)', ...
                'tmax', 1000, 'T', 500, ...
                'randomise', 0, 'rngseed', 30062020, 'vocal', 1);

    end

    time_series_generator('input_struct', inputs);

    save(fullfile(outfolder, 'inputs.mat'), 'inputs')
end
